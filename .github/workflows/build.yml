name: SonarCloud Scan and Tests
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: Test and SonarCloud Scan
    runs-on: ubuntu-latest
    services:
      zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
          - 2181:2181

      kafka:
        image: wurstmeister/kafka:latest
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
          KAFKA_DEFAULT_REPLICATION_FACTOR: '1'
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
        ports:
          - 9092:9092

      mysql_test:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: VERY_SECURE_PASSWORD
          MYSQL_DATABASE: landlord_db
          MYSQL_USER: user
          MYSQL_PASSWORD: VERY_SECURE_PASSWORD
        ports:
          - 3306:3306

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -P 3306 -u user --password=VERY_SECURE_PASSWORD && break
            echo "MySQL not ready yet..."
            sleep 5
          done

      - name: Wait for Zookeeper to be Ready
        run: |
          echo "Waiting for Zookeeper to be ready..."
          for i in {1..30}; do
            nc -zv localhost 2181 && break
            echo "Zookeeper not ready yet..."
            sleep 5
          done

      - name: Wait for Kafka to be Ready
        run: |
          echo "Waiting for Kafka to be ready..."
          for i in {1..5}; do
            nc -zv localhost 9092 && break
            echo "Kafka not ready yet..."
            sleep 5
          done

      - name: Run Tests
        env:
          DB_USER: user
          DB_PASSWORD: VERY_SECURE_PASSWORD
          DB_HOST: localhost
          DB_NAME: landlord_db
          DB_PORT: 3306
          KAFKA_BOOTSTRAP_SERVERS: localhost:9092
          ENV: development
        run: |
          pytest --cov=./ --cov-report=xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: -Dsonar.projectBaseDir=./